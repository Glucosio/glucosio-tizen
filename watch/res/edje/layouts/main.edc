#define ID_HOUR   0
#define ID_MINUTE 1
#define ID_SECOND 2
#define SIZE_TEXT 35

collections {
   group { name: "main";
      color_classes {
         color_class {
            name: "indicator_color";
            color: 255 10 127 255;
         }
      }
      parts {
         // Elm image will be created in "C" part and put into this container part as background.
         part { name: "swallow.bg";
            type: SWALLOW;
            description { state: "default" 0.0;
            }
         }
         // Elm image will be created in "C" part and put into this container part as minute arrow.
         part { name: "swallow.minute";
            type: SWALLOW;
            description { state: "default" 0.0;
               // Map is necessary for part transformation
               map {
                  // Setting "on" attribute to "1" is enables map transformation.
                  on: 1;
                  // This is default rotation around z axis
                  rotation.z: 63;
               }
            }
         }
         // Elm image will be created in "C" part and put into this container part as hour arrow.
         part { name: "swallow.hour";
            type: SWALLOW;
            description { state: "default" 0.0;
               map {
                  on: 1;
                  rotation.z: -59;
               }
            }
         }
         // Elm image will be created in "C" part and put into this container part as second arrow.
         part { name: "swallow.second";
            type: SWALLOW;
            description { state: "default" 0.0;
               map {
                  on: 1;
                  rotation.z: 216;
               }
            }
         }
         // This part is the container for button which will be created at "C" part using elm_button.
         part { name: "swallow.button.style_change";
            type: SWALLOW;
            description { state: "default" 0.0;
            }
         }
         // This part is the container for button to start glucosio ui app.
         part { name: "text.indicator";
            type: TEXT;
            description { state: "default" 0.0;
               text.size: SIZE_TEXT;
               color_class: "indicator_color";
               rel1.relative: 0.0 0.7;
            }
         }
         // This part is the container for button to start glucosio ui app.
         part { name: "swallow.button.glucosio";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.7;
            }
         }
      }
      programs {
         // Embryo script
         script {
            // Overriding of standart function to receive values with message from "C" part of application.
            // Here we will receive value with arrow angle and arrow id and then
            // we will create new "custom state" for necessary part with rotation parameter.
            public message(Msg_Type:type, id, ...) {
               new Float:angle = getfarg(2);
               if (type == MSG_FLOAT) {
                  if (id == ID_HOUR) {
                     // Create new "custom" state with parameters as at "default" state of "image.hour" part.
                     custom_state(PART:"swallow.hour", "default", 0.0);
                     // Setting rotation z parameter to received value from "C" part of application.
                     set_state_val(PART:"swallow.hour", STATE_MAP_ROT_Z, angle);
                     // Apply created "custom" state to "image.hour" part with hour arrow.
                     set_state(PART:"swallow.hour", "custom", 0.0);
                  }
                  else if (id == ID_MINUTE) {
                     // The same as for hour arrow part
                     custom_state(PART:"swallow.minute", "default", 0.0);
                     set_state_val(PART:"swallow.minute", STATE_MAP_ROT_Z, angle);
                     set_state(PART:"swallow.minute", "custom", 0.0);
                  }
                  else if (id == ID_SECOND) {
                     // The same as for hour arrow part
                     custom_state(PART:"swallow.second", "default", 0.0);
                     set_state_val(PART:"swallow.second", STATE_MAP_ROT_Z, angle);
                     set_state(PART:"swallow.second", "custom", 0.0);
                  }
               }
            }
         }
      }
   }
}